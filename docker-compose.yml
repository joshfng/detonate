networks:
  development:
  test:

volumes:
  db_data:
  gem_cache:
  shared_data:

services:
  redis:
    image: redis:7.0-alpine
    container_name: redis
    command: redis-server
    networks:
      - development
      - test
    volumes:
      - shared_data:/var/shared/redis

  db:
    image: postgres:16-alpine
    container_name: db
    volumes:
      - db_data:/var/lib/postgresql/data
      - shared_data:/var/shared
    networks:
      - development
      - test
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: detonate_development

  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - .:/var/app
      - shared_data:/var/shared
      - gem_cache:/usr/local/bundle/gems
    networks:
      - development
    ports:
      - 3000:3000
    stdin_open: true
    tty: true
    env_file: .env.development
    entrypoint: docker/dev-entrypoint.sh
    command: ["rails", "server", "-p", "3000", "-b", "0.0.0.0"]
    depends_on:
      - db
      - redis
    restart: "always"

  # webpack:
  #   container_name: webpack
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.dev
  #   volumes:
  #     - .:/var/app
  #     - shared_data:/var/shared
  #     - gem_cache:/usr/local/bundle/gems
  #   networks:
  #     - development
  #   ports:
  #     - 3035:3035
  #   stdin_open: true
  #   tty: true
  #   env_file: .env.development
  #   entrypoint: docker/dev-entrypoint.sh
  #   command: ["./bin/webpack-dev-server"]
  #   restart: "always"

  worker:
    container_name: worker
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - .:/var/app
      - shared_data:/var/shared
      - gem_cache:/usr/local/bundle/gems
    networks:
      - development
    stdin_open: true
    tty: true
    env_file: .env.development
    entrypoint: docker/dev-entrypoint.sh
    command: ["sidekiq"]
    environment:
      RAILS_ENV: development
    depends_on:
      - db
      - redis
    restart: "always"

  test:
    container_name: test
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - .:/var/app
      - shared_data:/var/shared
      - gem_cache:/usr/local/bundle/gems
    networks:
      - test
    ports:
      - 3001:3000
    stdin_open: true
    tty: true
    env_file: .env.test
    entrypoint: docker/test-entrypoint.sh
    command: ["rails", "-v"]
    depends_on:
      - db
      - redis
    restart: "no"
